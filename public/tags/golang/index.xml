<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Welcome to dave.dev</title>
    <link>https://dave.dev/tags/golang/</link>
    <description>Recent content in Golang on Welcome to dave.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Nov 2019 10:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://dave.dev/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Signals, Go &amp; Immutable Infrastructure</title>
      <link>https://dave.dev/blog/2019/11/signals-go-immutable-infrastructure/</link>
      <pubDate>Sat, 23 Nov 2019 10:00:00 +0000</pubDate>
      
      <guid>https://dave.dev/blog/2019/11/signals-go-immutable-infrastructure/</guid>
      <description>From the days of old, setting fire to a large torch would signal to a neighbouring town something was going on.</description>
    </item>
    
    <item>
      <title>Multiple Argument Functions</title>
      <link>https://dave.dev/blog/2019/10/multiple-argument-functions/</link>
      <pubDate>Mon, 07 Oct 2019 10:00:00 +0000</pubDate>
      
      <guid>https://dave.dev/blog/2019/10/multiple-argument-functions/</guid>
      <description>Dave Cheyney, Wizard extraordinaire posted a challenge on clarity for multi-argument functions.</description>
    </item>
    
    <item>
      <title>XML Unmarshal and XPath</title>
      <link>https://dave.dev/blog/2018/12/xml-unmarshal-and-xpath/</link>
      <pubDate>Wed, 05 Dec 2018 10:00:00 +0000</pubDate>
      
      <guid>https://dave.dev/blog/2018/12/xml-unmarshal-and-xpath/</guid>
      <description>Battling with data structures is a normal daily task and figuring out the best way manipulate XML isn’t just a case of writing something that works and walking away declaring job done.</description>
    </item>
    
    <item>
      <title>gops &amp; InfluxDB</title>
      <link>https://dave.dev/blog/2018/08/gops-and-influx/</link>
      <pubDate>Thu, 16 Aug 2018 10:00:00 +0000</pubDate>
      
      <guid>https://dave.dev/blog/2018/08/gops-and-influx/</guid>
      <description>What can I say, I’m paranoid about reliability and things working how they were designed to.</description>
    </item>
    
    <item>
      <title>goFAL - File Abstraction in Go</title>
      <link>https://dave.dev/blog/2018/04/gofal/</link>
      <pubDate>Tue, 24 Apr 2018 10:00:00 +0000</pubDate>
      
      <guid>https://dave.dev/blog/2018/04/gofal/</guid>
      <description>When writing scripts that create or manipulate file and directories, it’s all too easy to get lost using chmod and chdir operating system directives.</description>
    </item>
    
    <item>
      <title>Ghost2logger Design - Part One</title>
      <link>https://dave.dev/blog/2017/09/ghost2logger-design-part-one/</link>
      <pubDate>Fri, 15 Sep 2017 10:00:00 +0000</pubDate>
      
      <guid>https://dave.dev/blog/2017/09/ghost2logger-design-part-one/</guid>
      <description>Ghost2logger: Design Thinking It’s funny how you never hear “That was easy!</description>
    </item>
    
    <item>
      <title>Golang magic, package level vars, init, Init and global state</title>
      <link>https://dave.dev/blog/2017/07/golang-magic/</link>
      <pubDate>Wed, 19 Jul 2017 10:00:00 +0000</pubDate>
      
      <guid>https://dave.dev/blog/2017/07/golang-magic/</guid>
      <description>Pre-Intro This article is a re-focussed re-write on the matters at hand.</description>
    </item>
    
    <item>
      <title>Fun with Iota</title>
      <link>https://dave.dev/blog/2017/06/golang-iota/</link>
      <pubDate>Tue, 27 Jun 2017 10:00:00 +0000</pubDate>
      
      <guid>https://dave.dev/blog/2017/06/golang-iota/</guid>
      <description>A super short word on Iota with Golang.
Sometime back I was creating a UDP application that presented a basic JSON-API.</description>
    </item>
    
    <item>
      <title>Golang: Exercising pointers, interfaces, functions and wrapping</title>
      <link>https://dave.dev/blog/2016/07/golang-exercising-pointers-interfaces-functions-and-wrapping/</link>
      <pubDate>Sun, 03 Jul 2016 10:00:00 +0000</pubDate>
      
      <guid>https://dave.dev/blog/2016/07/golang-exercising-pointers-interfaces-functions-and-wrapping/</guid>
      <description>This article is inspired by my somewhat confused learning experience with interfaces, methods and wrapping functions in Golang.</description>
    </item>
    
    <item>
      <title>Golang net package: UDP Client with Specific Source Port</title>
      <link>https://dave.dev/blog/2016/05/golang-net-package-udp-client-with-specific-source-port/</link>
      <pubDate>Mon, 23 May 2016 10:00:00 +0000</pubDate>
      
      <guid>https://dave.dev/blog/2016/05/golang-net-package-udp-client-with-specific-source-port/</guid>
      <description>Well you found it if you were looking for it. If you are using the Golang net package and need to set a specific source port for the UDP or TCP dial functions, then look no further.</description>
    </item>
    
  </channel>
</rss>